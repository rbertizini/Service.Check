//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Service.Check.ListaNDDPRD {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AR-DFe LKMSoap", Namespace="http://ardfe.lkm.com.br")]
    public partial class ARDFeLKM : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback EnviarArquivoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObterListaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObterArquivoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmarArquivoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObterListaNDDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObterArquivoNDDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmarArquivoNDDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ARDFeLKM() {
            this.Url = global::Service.Check.Properties.Settings.Default.Service_Check_ListaNDDPRD_AR_DFe_x0020_LKM;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event EnviarArquivoCompletedEventHandler EnviarArquivoCompleted;
        
        /// <remarks/>
        public event ObterListaCompletedEventHandler ObterListaCompleted;
        
        /// <remarks/>
        public event ObterArquivoCompletedEventHandler ObterArquivoCompleted;
        
        /// <remarks/>
        public event ConfirmarArquivoCompletedEventHandler ConfirmarArquivoCompleted;
        
        /// <remarks/>
        public event ObterListaNDDCompletedEventHandler ObterListaNDDCompleted;
        
        /// <remarks/>
        public event ObterArquivoNDDCompletedEventHandler ObterArquivoNDDCompleted;
        
        /// <remarks/>
        public event ConfirmarArquivoNDDCompletedEventHandler ConfirmarArquivoNDDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ardfe.lkm.com.br/EnviarArquivo", RequestNamespace="http://ardfe.lkm.com.br", ResponseNamespace="http://ardfe.lkm.com.br", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EnviarArquivo([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] arqConteudo, string arqNome, string arqDiret, string arqUrl, string arqEmailRem, string arqEmailDthr, string identCliente, string solicAmb, string solicOrig, out string procDthrIni, out string procDthrFim, out string procDthrDif) {
            object[] results = this.Invoke("EnviarArquivo", new object[] {
                        arqConteudo,
                        arqNome,
                        arqDiret,
                        arqUrl,
                        arqEmailRem,
                        arqEmailDthr,
                        identCliente,
                        solicAmb,
                        solicOrig});
            procDthrIni = ((string)(results[1]));
            procDthrFim = ((string)(results[2]));
            procDthrDif = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EnviarArquivoAsync(byte[] arqConteudo, string arqNome, string arqDiret, string arqUrl, string arqEmailRem, string arqEmailDthr, string identCliente, string solicAmb, string solicOrig) {
            this.EnviarArquivoAsync(arqConteudo, arqNome, arqDiret, arqUrl, arqEmailRem, arqEmailDthr, identCliente, solicAmb, solicOrig, null);
        }
        
        /// <remarks/>
        public void EnviarArquivoAsync(byte[] arqConteudo, string arqNome, string arqDiret, string arqUrl, string arqEmailRem, string arqEmailDthr, string identCliente, string solicAmb, string solicOrig, object userState) {
            if ((this.EnviarArquivoOperationCompleted == null)) {
                this.EnviarArquivoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnviarArquivoOperationCompleted);
            }
            this.InvokeAsync("EnviarArquivo", new object[] {
                        arqConteudo,
                        arqNome,
                        arqDiret,
                        arqUrl,
                        arqEmailRem,
                        arqEmailDthr,
                        identCliente,
                        solicAmb,
                        solicOrig}, this.EnviarArquivoOperationCompleted, userState);
        }
        
        private void OnEnviarArquivoOperationCompleted(object arg) {
            if ((this.EnviarArquivoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnviarArquivoCompleted(this, new EnviarArquivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ardfe.lkm.com.br/ObterLista", RequestNamespace="http://ardfe.lkm.com.br", ResponseNamespace="http://ardfe.lkm.com.br", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ObterLista(string identCliente, string solicAmb, string solicOrig, out string procDthrIni, out string procDthrFim, out string procDthrDif) {
            object[] results = this.Invoke("ObterLista", new object[] {
                        identCliente,
                        solicAmb,
                        solicOrig});
            procDthrIni = ((string)(results[1]));
            procDthrFim = ((string)(results[2]));
            procDthrDif = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ObterListaAsync(string identCliente, string solicAmb, string solicOrig) {
            this.ObterListaAsync(identCliente, solicAmb, solicOrig, null);
        }
        
        /// <remarks/>
        public void ObterListaAsync(string identCliente, string solicAmb, string solicOrig, object userState) {
            if ((this.ObterListaOperationCompleted == null)) {
                this.ObterListaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObterListaOperationCompleted);
            }
            this.InvokeAsync("ObterLista", new object[] {
                        identCliente,
                        solicAmb,
                        solicOrig}, this.ObterListaOperationCompleted, userState);
        }
        
        private void OnObterListaOperationCompleted(object arg) {
            if ((this.ObterListaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObterListaCompleted(this, new ObterListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ardfe.lkm.com.br/ObterArquivo", RequestNamespace="http://ardfe.lkm.com.br", ResponseNamespace="http://ardfe.lkm.com.br", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ObterArquivo(string arqNome, string identCliente, string solicAmb, string solicOrig, out string procDthrIni, out string procDthrFim, out string procDthrDif) {
            object[] results = this.Invoke("ObterArquivo", new object[] {
                        arqNome,
                        identCliente,
                        solicAmb,
                        solicOrig});
            procDthrIni = ((string)(results[1]));
            procDthrFim = ((string)(results[2]));
            procDthrDif = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ObterArquivoAsync(string arqNome, string identCliente, string solicAmb, string solicOrig) {
            this.ObterArquivoAsync(arqNome, identCliente, solicAmb, solicOrig, null);
        }
        
        /// <remarks/>
        public void ObterArquivoAsync(string arqNome, string identCliente, string solicAmb, string solicOrig, object userState) {
            if ((this.ObterArquivoOperationCompleted == null)) {
                this.ObterArquivoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObterArquivoOperationCompleted);
            }
            this.InvokeAsync("ObterArquivo", new object[] {
                        arqNome,
                        identCliente,
                        solicAmb,
                        solicOrig}, this.ObterArquivoOperationCompleted, userState);
        }
        
        private void OnObterArquivoOperationCompleted(object arg) {
            if ((this.ObterArquivoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObterArquivoCompleted(this, new ObterArquivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ardfe.lkm.com.br/ConfirmarArquivo", RequestNamespace="http://ardfe.lkm.com.br", ResponseNamespace="http://ardfe.lkm.com.br", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmarArquivo(string arqNome, string identCliente, string solicAmb, string solicOrig, out string procDthrIni, out string procDthrFim, out string procDthrDif) {
            object[] results = this.Invoke("ConfirmarArquivo", new object[] {
                        arqNome,
                        identCliente,
                        solicAmb,
                        solicOrig});
            procDthrIni = ((string)(results[1]));
            procDthrFim = ((string)(results[2]));
            procDthrDif = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmarArquivoAsync(string arqNome, string identCliente, string solicAmb, string solicOrig) {
            this.ConfirmarArquivoAsync(arqNome, identCliente, solicAmb, solicOrig, null);
        }
        
        /// <remarks/>
        public void ConfirmarArquivoAsync(string arqNome, string identCliente, string solicAmb, string solicOrig, object userState) {
            if ((this.ConfirmarArquivoOperationCompleted == null)) {
                this.ConfirmarArquivoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmarArquivoOperationCompleted);
            }
            this.InvokeAsync("ConfirmarArquivo", new object[] {
                        arqNome,
                        identCliente,
                        solicAmb,
                        solicOrig}, this.ConfirmarArquivoOperationCompleted, userState);
        }
        
        private void OnConfirmarArquivoOperationCompleted(object arg) {
            if ((this.ConfirmarArquivoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmarArquivoCompleted(this, new ConfirmarArquivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ardfe.lkm.com.br/ObterListaNDD", RequestNamespace="http://ardfe.lkm.com.br", ResponseNamespace="http://ardfe.lkm.com.br", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ObterListaNDD(string identCliente, string solicAmb, string solicOrig, out string procDthrIni, out string procDthrFim, out string procDthrDif) {
            object[] results = this.Invoke("ObterListaNDD", new object[] {
                        identCliente,
                        solicAmb,
                        solicOrig});
            procDthrIni = ((string)(results[1]));
            procDthrFim = ((string)(results[2]));
            procDthrDif = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ObterListaNDDAsync(string identCliente, string solicAmb, string solicOrig) {
            this.ObterListaNDDAsync(identCliente, solicAmb, solicOrig, null);
        }
        
        /// <remarks/>
        public void ObterListaNDDAsync(string identCliente, string solicAmb, string solicOrig, object userState) {
            if ((this.ObterListaNDDOperationCompleted == null)) {
                this.ObterListaNDDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObterListaNDDOperationCompleted);
            }
            this.InvokeAsync("ObterListaNDD", new object[] {
                        identCliente,
                        solicAmb,
                        solicOrig}, this.ObterListaNDDOperationCompleted, userState);
        }
        
        private void OnObterListaNDDOperationCompleted(object arg) {
            if ((this.ObterListaNDDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObterListaNDDCompleted(this, new ObterListaNDDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ardfe.lkm.com.br/ObterArquivoNDD", RequestNamespace="http://ardfe.lkm.com.br", ResponseNamespace="http://ardfe.lkm.com.br", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ObterArquivoNDD(string arqNome, string identCliente, string solicAmb, string solicOrig, out string procDthrIni, out string procDthrFim, out string procDthrDif) {
            object[] results = this.Invoke("ObterArquivoNDD", new object[] {
                        arqNome,
                        identCliente,
                        solicAmb,
                        solicOrig});
            procDthrIni = ((string)(results[1]));
            procDthrFim = ((string)(results[2]));
            procDthrDif = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ObterArquivoNDDAsync(string arqNome, string identCliente, string solicAmb, string solicOrig) {
            this.ObterArquivoNDDAsync(arqNome, identCliente, solicAmb, solicOrig, null);
        }
        
        /// <remarks/>
        public void ObterArquivoNDDAsync(string arqNome, string identCliente, string solicAmb, string solicOrig, object userState) {
            if ((this.ObterArquivoNDDOperationCompleted == null)) {
                this.ObterArquivoNDDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObterArquivoNDDOperationCompleted);
            }
            this.InvokeAsync("ObterArquivoNDD", new object[] {
                        arqNome,
                        identCliente,
                        solicAmb,
                        solicOrig}, this.ObterArquivoNDDOperationCompleted, userState);
        }
        
        private void OnObterArquivoNDDOperationCompleted(object arg) {
            if ((this.ObterArquivoNDDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObterArquivoNDDCompleted(this, new ObterArquivoNDDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ardfe.lkm.com.br/ConfirmarArquivoNDD", RequestNamespace="http://ardfe.lkm.com.br", ResponseNamespace="http://ardfe.lkm.com.br", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmarArquivoNDD(string arqNome, string identCliente, string solicAmb, string solicOrig, out string procDthrIni, out string procDthrFim, out string procDthrDif) {
            object[] results = this.Invoke("ConfirmarArquivoNDD", new object[] {
                        arqNome,
                        identCliente,
                        solicAmb,
                        solicOrig});
            procDthrIni = ((string)(results[1]));
            procDthrFim = ((string)(results[2]));
            procDthrDif = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmarArquivoNDDAsync(string arqNome, string identCliente, string solicAmb, string solicOrig) {
            this.ConfirmarArquivoNDDAsync(arqNome, identCliente, solicAmb, solicOrig, null);
        }
        
        /// <remarks/>
        public void ConfirmarArquivoNDDAsync(string arqNome, string identCliente, string solicAmb, string solicOrig, object userState) {
            if ((this.ConfirmarArquivoNDDOperationCompleted == null)) {
                this.ConfirmarArquivoNDDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmarArquivoNDDOperationCompleted);
            }
            this.InvokeAsync("ConfirmarArquivoNDD", new object[] {
                        arqNome,
                        identCliente,
                        solicAmb,
                        solicOrig}, this.ConfirmarArquivoNDDOperationCompleted, userState);
        }
        
        private void OnConfirmarArquivoNDDOperationCompleted(object arg) {
            if ((this.ConfirmarArquivoNDDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmarArquivoNDDCompleted(this, new ConfirmarArquivoNDDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void EnviarArquivoCompletedEventHandler(object sender, EnviarArquivoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnviarArquivoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnviarArquivoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string procDthrIni {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string procDthrFim {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string procDthrDif {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ObterListaCompletedEventHandler(object sender, ObterListaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObterListaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObterListaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string procDthrIni {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string procDthrFim {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string procDthrDif {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ObterArquivoCompletedEventHandler(object sender, ObterArquivoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObterArquivoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObterArquivoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string procDthrIni {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string procDthrFim {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string procDthrDif {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConfirmarArquivoCompletedEventHandler(object sender, ConfirmarArquivoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmarArquivoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmarArquivoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string procDthrIni {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string procDthrFim {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string procDthrDif {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ObterListaNDDCompletedEventHandler(object sender, ObterListaNDDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObterListaNDDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObterListaNDDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string procDthrIni {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string procDthrFim {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string procDthrDif {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ObterArquivoNDDCompletedEventHandler(object sender, ObterArquivoNDDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObterArquivoNDDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObterArquivoNDDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string procDthrIni {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string procDthrFim {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string procDthrDif {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConfirmarArquivoNDDCompletedEventHandler(object sender, ConfirmarArquivoNDDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmarArquivoNDDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmarArquivoNDDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string procDthrIni {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string procDthrFim {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string procDthrDif {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
}

#pragma warning restore 1591